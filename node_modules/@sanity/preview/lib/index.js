"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
Object.defineProperty(exports, "observeForPreview", {
  enumerable: true,
  get: function get() {
    return _observeForPreview.default;
  }
});
Object.defineProperty(exports, "observePaths", {
  enumerable: true,
  get: function get() {
    return _observePaths.default;
  }
});
exports.observeWithPaths = exports.materializePaths = void 0;

var _observeFields = _interopRequireDefault(require("./observeFields"));

var _observeForPreview = _interopRequireDefault(require("./observeForPreview"));

var _observePaths = _interopRequireDefault(require("./observePaths"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var materializePaths = deprecate(_observePaths.default, 'The function materializePaths from @sanity/preview is deprecated in favor of observePaths from the same package');
exports.materializePaths = materializePaths;
var observeWithPaths = deprecate(_observeFields.default, 'The function observeWithPaths from @sanity/preview is deprecated in favor of observePaths from the same package');
exports.observeWithPaths = observeWithPaths;

function deprecate(old, message) {
  for (var _len = arguments.length, args = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {
    args[_key - 2] = arguments[_key];
  }

  var hasWarned = false;
  return function deprecated() {
    if (!hasWarned) {
      hasWarned = true; // eslint-disable-next-line no-console

      console.warn(new Error(message));
    } // eslint-disable-next-line prefer-rest-params


    return old(...arguments);
  };
}