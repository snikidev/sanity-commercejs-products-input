import * as React from 'react';
import { Observable } from 'rxjs';
export declare function toObservable<T>(value: T): Observable<T>;
export declare function toObservable<T, K>(value: T, setup: (props$: Observable<T>) => Observable<K>): Observable<K>;
export declare function useObservable<T>(observable$: Observable<T>): T | undefined;
export declare function useObservable<T>(observable$: Observable<T>, initialValue: T): T;
export declare function useObservable<T>(observable$: Observable<T>, initialValue: () => T): T;
export declare function useObservableState<T>(): [
    Observable<T | undefined>,
    React.Dispatch<React.SetStateAction<T | undefined>>
];
export declare function useObservableState<T>(initial: T | (() => T)): [Observable<T>, React.Dispatch<React.SetStateAction<T>>];
export declare function useObservableContext<T>(context: React.Context<T>): Observable<T>;
//# sourceMappingURL=useObservable.d.ts.map