import { ArraySchemaType, SchemaType } from '@sanity/types';
import React from 'react';
import PatchEvent from '../../PatchEvent';
import { ItemValue } from './typedefs';
interface ArrayFunctionsProps {
    className?: string;
    type: ArraySchemaType;
    children: Node | null;
    value: ItemValue[];
    readOnly: boolean | null;
    onAppendItem: (itemValue: ItemValue) => void;
    onPrependItem: (itemValue: ItemValue) => void;
    onFocusItem: (item: ItemValue) => void;
    onCreateValue: (type: SchemaType) => ItemValue;
    onChange: (event: PatchEvent) => void;
}
export default class ArrayFunctions extends React.Component<ArrayFunctionsProps> {
    handleDropDownAction: (menuItem: {
        type: SchemaType;
    }) => void;
    handleAddBtnClick: () => void;
    handleInsertItem: (type: any) => void;
    renderSelectType(): JSX.Element;
    render(): JSX.Element;
}
export {};
//# sourceMappingURL=ArrayFunctions.d.ts.map