import React from 'react';
import { Marker, Path, Reference, ReferenceFilterSearchOptions, ReferenceSchemaType, SanityDocument } from '@sanity/types';
import PatchEvent from '../../PatchEvent';
import { ObservableI } from '../../typedefs/observable';
declare type SearchHit = {
    _id: string;
    _type: string;
};
declare type PreviewSnapshot = {
    _type: string;
    title: string;
    description: string;
};
export declare type Props = {
    value?: Reference;
    compareValue?: Reference;
    type: ReferenceSchemaType;
    markers: Marker[];
    focusPath: Path;
    readOnly?: boolean;
    onSearch: (query: string, type: ReferenceSchemaType, options: ReferenceFilterSearchOptions) => ObservableI<Array<SearchHit>>;
    onFocus: (path: Path) => void;
    getPreviewSnapshot: (reference: any, type: any) => ObservableI<PreviewSnapshot>;
    onChange: (event: PatchEvent) => void;
    level: number;
    presence: any;
    document: SanityDocument;
    getValuePath: () => Path;
};
declare const _default;
export default _default;
//# sourceMappingURL=ReferenceInput.d.ts.map