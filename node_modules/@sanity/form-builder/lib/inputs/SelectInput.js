"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _capitalize2 = _interopRequireDefault(require("lodash/capitalize"));

var _uniqueId2 = _interopRequireDefault(require("lodash/uniqueId"));

var _react = _interopRequireDefault(require("react"));

var _types = require("@sanity/types");

var _default = _interopRequireDefault(require("part:@sanity/components/formfields/default"));

var _default2 = _interopRequireDefault(require("part:@sanity/components/selects/default"));

var _radio = _interopRequireDefault(require("part:@sanity/components/selects/radio"));

var _PatchEvent = _interopRequireWildcard(require("../PatchEvent"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var EMPTY_ITEM = {
  title: '',
  value: undefined
};

function toSelectItem(option) {
  return (0, _types.isTitledListValue)(option) ? option : {
    title: (0, _capitalize2.default)("".concat(option)),
    value: option
  };
}

class SelectInput extends _react.default.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "_input", void 0);

    _defineProperty(this, "name", (0, _uniqueId2.default)('RadioName'));

    _defineProperty(this, "handleChange", item => {
      var onChange = this.props.onChange;
      var newValue = typeof item === 'string' || typeof item === 'number' ? item : item.value;
      onChange(_PatchEvent.default.from(typeof newValue === 'undefined' ? (0, _PatchEvent.unset)() : (0, _PatchEvent.set)(newValue)));
    });

    _defineProperty(this, "setInput", input => {
      this._input = input;
    });
  }

  focus() {
    if (this._input) {
      this._input.focus();
    }
  }

  render() {
    var _type$options;

    var _this$props = this.props,
        value = _this$props.value,
        readOnly = _this$props.readOnly,
        markers = _this$props.markers,
        type = _this$props.type,
        level = _this$props.level,
        onFocus = _this$props.onFocus,
        presence = _this$props.presence;
    var items = (((_type$options = type.options) === null || _type$options === void 0 ? void 0 : _type$options.list) || []).map(toSelectItem);
    var currentItem = items.find(item => item.value === value);
    var isRadio = type.options && type.options.layout === 'radio';
    var validation = markers.filter(marker => marker.type === 'validation');
    return /*#__PURE__*/_react.default.createElement(_default.default, {
      labelFor: this.name,
      markers: markers,
      level: level,
      label: type.title,
      description: type.description,
      presence: presence,
      onFocus: onFocus
    }, isRadio ? /*#__PURE__*/_react.default.createElement(_radio.default, {
      name: this.name,
      legend: type.title,
      items: items,
      onChange: this.handleChange,
      onFocus: onFocus,
      value: currentItem,
      direction: type.options.direction || 'vertical',
      ref: this.setInput,
      readOnly: readOnly
    }) : /*#__PURE__*/_react.default.createElement(_default2.default, {
      id: this.name,
      label: type.title,
      value: currentItem,
      placeholder: type.placeholder,
      onChange: this.handleChange,
      onFocus: onFocus,
      items: [EMPTY_ITEM].concat(items),
      ref: this.setInput,
      readOnly: readOnly,
      hasError: validation.length >= 1
    }));
  }

}

exports.default = SelectInput;

_defineProperty(SelectInput, "defaultProps", {
  value: ''
});