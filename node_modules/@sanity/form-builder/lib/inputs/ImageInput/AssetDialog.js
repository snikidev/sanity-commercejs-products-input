"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = AssetDialog;

var _react = _interopRequireDefault(require("react"));

var _linkIcon = _interopRequireDefault(require("part:@sanity/base/link-icon"));

var _trashIcon = _interopRequireDefault(require("part:@sanity/base/trash-icon"));

var _router = require("part:@sanity/base/router");

var _schema = _interopRequireDefault(require("part:@sanity/base/schema"));

var _withReferringDocuments = require("part:@sanity/base/with-referring-documents");

var _default = _interopRequireDefault(require("part:@sanity/components/dialogs/default"));

var _default2 = require("part:@sanity/components/lists/default");

var _spinner = _interopRequireDefault(require("part:@sanity/components/loading/spinner"));

var _Preview = _interopRequireDefault(require("../../Preview"));

var _AssetDialog = _interopRequireDefault(require("./AssetDialog.css"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var DIALOG_DELETE_ACTION = {
  color: 'danger',
  icon: _trashIcon.default,
  inverted: true,
  name: 'delete',
  title: 'Delete'
};
var DIALOG_CLOSE_ACTION = {
  inverted: true,
  name: 'close',
  title: 'Close'
};

function getDialogActions(dialogType) {
  if (dialogType != 'error') {
    return [DIALOG_DELETE_ACTION, DIALOG_CLOSE_ACTION];
  }

  return [DIALOG_CLOSE_ACTION];
}

function AssetDialog(_ref) {
  var asset = _ref.asset,
      dialogType = _ref.dialogType,
      onAction = _ref.onAction,
      onClose = _ref.onClose;
  var actions = getDialogActions(dialogType);
  return /*#__PURE__*/_react.default.createElement(_default.default, {
    title: dialogType === 'error' ? 'Could not delete asset' : 'Documents using this',
    color: dialogType === 'error' ? 'danger' : undefined,
    onClose: onClose,
    onAction: onAction,
    actions: actions,
    size: "medium",
    key: dialogType
  }, /*#__PURE__*/_react.default.createElement("div", {
    className: _AssetDialog.default.dialogContent
  }, /*#__PURE__*/_react.default.createElement("img", {
    src: "".concat(asset.url, "?w=200"),
    style: {
      maxWidth: '200px'
    }
  }), /*#__PURE__*/_react.default.createElement(_withReferringDocuments.WithReferringDocuments, {
    id: asset._id
  }, (_ref2) => {
    var isLoading = _ref2.isLoading,
        referringDocuments = _ref2.referringDocuments;
    var drafts = referringDocuments.reduce((acc, doc) => doc._id.startsWith('drafts.') ? acc.concat(doc._id.slice(7)) : acc, []);
    var filteredDocuments = referringDocuments.filter(doc => !drafts.includes(doc._id));

    if (isLoading) {
      return /*#__PURE__*/_react.default.createElement(_spinner.default, null, "Loading\u2026");
    }

    return /*#__PURE__*/_react.default.createElement("div", null, filteredDocuments.length === 0 ? /*#__PURE__*/_react.default.createElement("div", null, "No documents are referencing this asset") : /*#__PURE__*/_react.default.createElement(_react.default.Fragment, null, dialogType === 'error' && /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement("h4", {
      className: _AssetDialog.default.dialogSubtitle
    }, filteredDocuments.length > 1 ? "".concat(filteredDocuments.length, " documents are using this asset") : 'A document is using this asset'), /*#__PURE__*/_react.default.createElement("p", {
      className: _AssetDialog.default.referringDocumentsDescription
    }, "Open the document".concat(referringDocuments.length > 1 ? 's' : '', " and remove the asset before deleting it."))), /*#__PURE__*/_react.default.createElement(_default2.List, null, filteredDocuments.map(doc => {
      return /*#__PURE__*/_react.default.createElement(_default2.Item, {
        key: doc._id
      }, /*#__PURE__*/_react.default.createElement(_router.IntentLink, {
        intent: "edit",
        params: {
          id: doc._id
        },
        key: doc._id,
        className: _AssetDialog.default.intentLink
      }, /*#__PURE__*/_react.default.createElement(_Preview.default, {
        value: doc,
        type: _schema.default.get(doc._type)
      }), /*#__PURE__*/_react.default.createElement("span", {
        className: _AssetDialog.default.openDocLink
      }, /*#__PURE__*/_react.default.createElement(_linkIcon.default, null), " Open")));
    }))));
  })));
}