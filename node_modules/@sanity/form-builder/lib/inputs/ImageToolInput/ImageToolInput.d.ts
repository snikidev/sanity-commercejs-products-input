import React from 'react';
import { ImageCrop, ImageHotspot, ObjectSchemaType } from '@sanity/types';
import PatchEvent from '../../PatchEvent';
interface Value {
    hotspot?: ImageHotspot;
    crop?: ImageCrop;
}
interface ImageToolInputProps {
    imageUrl: string;
    value?: Value;
    compareValue?: Value;
    onChange: (event: PatchEvent) => void;
    readOnly: boolean | null;
    level: number;
    type: ObjectSchemaType;
}
interface ImageToolInputState {
    value: any;
}
export default class ImageToolInput extends React.Component<ImageToolInputProps, ImageToolInputState> {
    constructor(props: ImageToolInputProps);
    handleChangeEnd: () => void;
    handleChange: (nextValue: Value) => void;
    UNSAFE_componentWillReceiveProps(nextProps: ImageToolInputProps): void;
    render(): JSX.Element;
}
export {};
//# sourceMappingURL=ImageToolInput.d.ts.map