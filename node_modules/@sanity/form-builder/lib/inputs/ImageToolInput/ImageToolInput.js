"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireDefault(require("react"));

var _default = _interopRequireDefault(require("part:@sanity/components/formfields/default"));

var _imageLoader = _interopRequireDefault(require("part:@sanity/components/utilities/image-loader"));

var _imagetool = _interopRequireDefault(require("@sanity/imagetool"));

var _HotspotImage = _interopRequireDefault(require("@sanity/imagetool/HotspotImage"));

var _changeIndicators = require("@sanity/base/lib/change-indicators");

var _constants = require("@sanity/imagetool/constants");

var _PatchEvent = _interopRequireWildcard(require("../../PatchEvent"));

var _ImageToolInput = _interopRequireDefault(require("./styles/ImageToolInput.css"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _iterableToArrayLimit(arr, i) { if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var PREVIEW_ASPECT_RATIOS = [['3:4', 3 / 4], ['Square', 1 / 1], ['16:9', 16 / 9], ['Panorama', 4 / 1]];

class ImageToolInput extends _react.default.Component {
  constructor(props) {
    super(props);

    _defineProperty(this, "handleChangeEnd", () => {
      var _this$props = this.props,
          onChange = _this$props.onChange,
          readOnly = _this$props.readOnly,
          type = _this$props.type;
      var value = this.state.value; // For backwards compatibility, where hotspot/crop might not have a named type yet

      var cropField = type.fields.find(field => field.name === 'crop' && field.type.name !== 'object');
      var hotspotField = type.fields.find(field => field.name === 'hotspot' && field.type.name !== 'object');

      if (!readOnly) {
        var crop = cropField ? _objectSpread({
          _type: cropField.type.name
        }, value.crop) : value.crop;
        var hotspot = hotspotField ? _objectSpread({
          _type: hotspotField.type.name
        }, value.hotspot) : value.hotspot;
        onChange(_PatchEvent.default.from([(0, _PatchEvent.set)(crop, ['crop']), (0, _PatchEvent.set)(hotspot, ['hotspot'])]));
      }
    });

    _defineProperty(this, "handleChange", nextValue => {
      this.setState({
        value: nextValue
      });
    });

    this.state = {
      value: props.value
    };
  }

  // eslint-disable-next-line camelcase
  UNSAFE_componentWillReceiveProps(nextProps) {
    if (nextProps.value !== this.props.value) {
      this.setState({
        value: nextProps.value
      });
    }
  }

  render() {
    var _this$props2 = this.props,
        imageUrl = _this$props2.imageUrl,
        compareValue = _this$props2.compareValue,
        level = _this$props2.level,
        readOnly = _this$props2.readOnly;
    var value = this.state.value;
    return (
      /*#__PURE__*/
      // @todo: render presence and markers
      _react.default.createElement(_changeIndicators.ChangeIndicatorProvider, {
        path: ['hotspot'],
        focusPath: [],
        value: value === null || value === void 0 ? void 0 : value.current,
        compareValue: compareValue
      }, /*#__PURE__*/_react.default.createElement(_default.default // label?: string
      , {
        label: "Hotspot & crop" // className?: string
        // inline?: boolean
        // description?: string
        // level?: number
        ,
        level: level // children?: React.ReactNode
        // wrapped?: boolean
        // labelFor?: string
        // markers?: Marker[]
        // presence?: FormFieldPresence[]

      }, /*#__PURE__*/_react.default.createElement("div", {
        className: _ImageToolInput.default.imageToolContainer
      }, /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement(_imagetool.default, {
        value: value,
        src: imageUrl,
        readOnly: readOnly,
        onChangeEnd: this.handleChangeEnd,
        onChange: this.handleChange
      })))), /*#__PURE__*/_react.default.createElement("div", {
        className: _ImageToolInput.default.previewsContainer
      }, /*#__PURE__*/_react.default.createElement(ImageToolInputPreviewGrid, {
        imageUrl: imageUrl,
        value: value
      }))))
    );
  }

}

exports.default = ImageToolInput;

function ImageToolInputPreviewGrid(_ref) {
  var imageUrl = _ref.imageUrl,
      value = _ref.value;
  return /*#__PURE__*/_react.default.createElement("div", {
    className: _ImageToolInput.default.previews
  }, PREVIEW_ASPECT_RATIOS.map((_ref2) => {
    var _ref3 = _slicedToArray(_ref2, 2),
        title = _ref3[0],
        ratio = _ref3[1];

    return /*#__PURE__*/_react.default.createElement(ImageToolInputPreviewItem, {
      key: ratio,
      imageUrl: imageUrl,
      ratio: ratio,
      title: title,
      value: value
    });
  }));
}

function ImageToolInputPreviewItem(_ref4) {
  var imageUrl = _ref4.imageUrl,
      ratio = _ref4.ratio,
      title = _ref4.title,
      value = _ref4.value;
  return /*#__PURE__*/_react.default.createElement("div", {
    key: ratio,
    className: _ImageToolInput.default.preview
  }, /*#__PURE__*/_react.default.createElement("h4", null, title), /*#__PURE__*/_react.default.createElement("div", {
    className: _ImageToolInput.default.previewImage
  }, /*#__PURE__*/_react.default.createElement(_imageLoader.default, {
    src: imageUrl
  }, (_ref5) => {
    var image = _ref5.image,
        error = _ref5.error;
    return error ? /*#__PURE__*/_react.default.createElement("span", null, "Unable to load image: ", error.message) : /*#__PURE__*/_react.default.createElement(_HotspotImage.default, {
      aspectRatio: ratio,
      src: image.src,
      srcAspectRatio: image.width / image.height,
      hotspot: value.hotspot || _constants.DEFAULT_HOTSPOT,
      crop: value.crop || _constants.DEFAULT_CROP
    });
  })));
}