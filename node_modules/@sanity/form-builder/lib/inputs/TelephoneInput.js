"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _uniqueId2 = _interopRequireDefault(require("lodash/uniqueId"));

var _react = _interopRequireDefault(require("react"));

var _default = _interopRequireDefault(require("part:@sanity/components/textinputs/default"));

var _default2 = _interopRequireDefault(require("part:@sanity/components/formfields/default"));

var _PatchEvent = _interopRequireWildcard(require("../PatchEvent"));

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

class TelephoneInput extends _react.default.Component {
  constructor() {
    super(...arguments);

    _defineProperty(this, "_input", void 0);

    _defineProperty(this, "_inputId", (0, _uniqueId2.default)('TelephoneInput'));

    _defineProperty(this, "handleChange", event => {
      var value = event.currentTarget.value;
      this.props.onChange(_PatchEvent.default.from(value ? (0, _PatchEvent.set)(value) : (0, _PatchEvent.unset)()));
    });

    _defineProperty(this, "setInput", input => {
      this._input = input;
    });
  }

  focus() {
    if (this._input) {
      this._input.focus();
    }
  }

  render() {
    var _this$props = this.props,
        value = _this$props.value,
        markers = _this$props.markers,
        type = _this$props.type,
        readOnly = _this$props.readOnly,
        level = _this$props.level,
        onFocus = _this$props.onFocus,
        presence = _this$props.presence;
    var validation = markers.filter(marker => marker.type === 'validation');
    var errors = validation.filter(marker => marker.level === 'error');
    return /*#__PURE__*/_react.default.createElement(_default2.default, {
      markers: markers,
      level: level,
      label: type.title,
      description: type.description,
      presence: presence,
      labelFor: this._inputId
    }, /*#__PURE__*/_react.default.createElement(_default.default, {
      inputId: this._inputId,
      customValidity: errors && errors.length > 0 ? errors[0].item.message : '',
      type: "tel",
      value: value,
      readOnly: readOnly,
      placeholder: type.placeholder,
      onChange: this.handleChange,
      onFocus: onFocus,
      ref: this.setInput
    }));
  }

}

exports.default = TelephoneInput;