"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _react = _interopRequireWildcard(require("react"));

var _client = _interopRequireDefault(require("part:@sanity/base/client"));

var _spinner = _interopRequireDefault(require("part:@sanity/components/loading/spinner"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function _getRequireWildcardCache() { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

var checkCors = () => Promise.all([_client.default.request({
  uri: '/ping',
  withCredentials: false
}).then(() => true), _client.default.request({
  uri: '/users/me',
  withCredentials: false
}).then(() => true).catch(() => false)]).then(res => ({
  isCorsError: res[0] && !res[1],
  pingResponded: res[0]
})).catch(error => ({
  error
}));

var linkRel = 'noopener noreferrer';

class CorsCheck extends _react.PureComponent {
  constructor() {
    super(...arguments);
    this.state = {
      isLoading: true
    };
  }

  UNSAFE_componentWillMount() {
    checkCors().then(res => this.setState({
      result: res,
      isLoading: false
    }));
  }

  renderWrapper(content) {
    var result = this.state.result;
    var response = result && result.error && result.error.response;
    var message = response && response.body && response.body.message;

    if (!message) {
      return content;
    }

    return /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement("p", null, "Error message:"), /*#__PURE__*/_react.default.createElement("pre", null, /*#__PURE__*/_react.default.createElement("code", null, response.body.message)), content);
  }

  render() {
    var _this$state = this.state,
        isLoading = _this$state.isLoading,
        result = _this$state.result;
    var origin = window.location.origin || window.location.href.replace(new RegExp("".concat(window.location.pathname, "$")), '');

    if (isLoading) {
      return /*#__PURE__*/_react.default.createElement(_spinner.default, {
        fullscreen: true,
        center: true
      });
    }

    var tld = _client.default.config().apiHost.replace(/.*?sanity\.([a-z]+).*/, '$1');

    var projectId = _client.default.config().projectId;

    var corsUrl = "https://manage.sanity.".concat(tld, "/projects/").concat(projectId, "/settings/api");
    var response = result.error && result.error.response;

    if (response) {
      var is404 = response.statusCode === 404;
      var errType = response.body.attributes && response.body.attributes.type;

      if (is404 && errType === 'project') {
        return /*#__PURE__*/_react.default.createElement("div", null, /*#__PURE__*/_react.default.createElement("p", null, response.body.message || response.statusCode), /*#__PURE__*/_react.default.createElement("p", null, "Double-check that your ", /*#__PURE__*/_react.default.createElement("code", null, "sanity.json"), " points to the right project ID!"));
      }
    }

    if (result.isCorsError) {
      return this.renderWrapper( /*#__PURE__*/_react.default.createElement("p", null, "It looks like the error is being caused by the current origin (", /*#__PURE__*/_react.default.createElement("code", null, origin), ") not being allowed for this project. If you are a project administrator or developer, you can head to", ' ', /*#__PURE__*/_react.default.createElement("a", {
        rel: linkRel,
        target: "_blank",
        href: corsUrl
      }, "the project management"), ' ', "interface. Add the origin under the", ' ', /*#__PURE__*/_react.default.createElement("a", {
        href: "https://www.sanity.io/docs/front-ends/cors",
        target: "_blank",
        rel: "noopener noreferrer"
      }, /*#__PURE__*/_react.default.createElement("em", null, "CORS Origins")), ' ', "section. Do remember to ", /*#__PURE__*/_react.default.createElement("code", null, "allow credentials"), "!"));
    }

    if (result.pingResponded) {
      return this.renderWrapper( /*#__PURE__*/_react.default.createElement("p", null, "Our diagnostics cannot quite determine why this happened. If it was a network glitch you could try hitting the ", /*#__PURE__*/_react.default.createElement("strong", null, "Retry"), " button below. If you are working as a developer on this project, you could also have a look at the browser's dev console and see if any issues are listed there."));
    }

    return this.renderWrapper( /*#__PURE__*/_react.default.createElement("p", null, "It might be that your internet connection is unstable or down. You could try hitting the", ' ', /*#__PURE__*/_react.default.createElement("strong", null, "Retry"), " button to see if it was just a temporary glitch."));
  }

}

var _default = CorsCheck;
exports.default = _default;