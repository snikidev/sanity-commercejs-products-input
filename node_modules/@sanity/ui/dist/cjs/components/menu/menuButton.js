"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MenuButton = void 0;
var react_1 = __importStar(require("react"));
var react_is_1 = __importDefault(require("react-is"));
var hooks_1 = require("../../hooks");
var primitives_1 = require("../../primitives");
function MenuButton(_a) {
    var boundaryElement = _a.boundaryElement, buttonProp = _a.button, id = _a.id, menuProp = _a.menu, placement = _a.placement, popoverScheme = _a.popoverScheme, portal = _a.portal, popoverRadius = _a.popoverRadius;
    var _b = react_1.useState(false), open = _b[0], setOpen = _b[1];
    var _c = react_1.useState(false), focusLast = _c[0], setFocusLast = _c[1];
    var _d = react_1.useState(null), buttonElement = _d[0], setButtonElement = _d[1];
    var _e = react_1.useState(null), menuElement = _e[0], setMenuElement = _e[1];
    var handleButtonClick = react_1.useCallback(function () {
        setOpen(function (val) { return !val; });
        setFocusLast(false);
    }, []);
    var handleButtonKeyDown = react_1.useCallback(function (event) {
        if (event.key === 'ArrowDown') {
            event.preventDefault();
            setOpen(true);
            setFocusLast(false);
            return;
        }
        if (event.key === 'ArrowUp') {
            event.preventDefault();
            setOpen(true);
            setFocusLast(true);
            return;
        }
    }, []);
    var handleMenuClickOutside = react_1.useCallback(function () { return setOpen(false); }, []);
    var handleMenuEscape = react_1.useCallback(function () {
        setOpen(false);
        if (buttonElement)
            buttonElement.focus();
    }, [buttonElement]);
    var handleItemClick = react_1.useCallback(function () {
        setOpen(false);
    }, []);
    hooks_1.useClickOutside(react_1.useCallback(function () { return setOpen(false); }, []), [buttonElement, menuElement]);
    var menuProps = {
        'aria-labelledby': id,
        focusLast: focusLast,
        onClickOutside: handleMenuClickOutside,
        onEscape: handleMenuEscape,
        onItemClick: handleItemClick,
        ref: setMenuElement,
    };
    // @todo: check if the `menu` property is a Menu component?
    var menu = menuProp ? react_1.cloneElement(menuProp, menuProps) : null;
    var buttonProps = {
        id: id,
        onClick: handleButtonClick,
        onKeyDown: handleButtonKeyDown,
        ref: setButtonElement,
        selected: open,
    };
    // @todo: check if the `button` property is a Button component?
    var button = react_is_1.default.isElement(buttonProp) ? react_1.cloneElement(buttonProp, buttonProps) : null;
    return (react_1.default.createElement(primitives_1.Popover, { boundaryElement: boundaryElement, content: menu, "data-ui": "MenuButton", open: open, placement: placement, portal: portal, radius: popoverRadius, scheme: popoverScheme }, button || react_1.default.createElement(react_1.default.Fragment, null)));
}
exports.MenuButton = MenuButton;
//# sourceMappingURL=menuButton.js.map