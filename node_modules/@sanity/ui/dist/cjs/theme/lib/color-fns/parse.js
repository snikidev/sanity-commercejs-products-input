"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseColor = void 0;
var convert_1 = require("./convert");
var HEX_CHARS = '0123456789ABCDEFabcdef';
var HSL_RE = /hsl\(\s*(\d+)\s*,\s*((\d+(?:\.\d+)?)%)\s*,\s*((\d+(?:\.\d+)?)%)\s*\)/i;
function isHexChars(str) {
    for (var _i = 0, str_1 = str; _i < str_1.length; _i++) {
        var c = str_1[_i];
        if (HEX_CHARS.indexOf(c) === -1) {
            return false;
        }
    }
    return true;
}
function isHex(str) {
    if (str[0] !== '#')
        return false;
    // Accept both #000 and #000000
    if (!(str.length === 4 || str.length === 7))
        return false;
    return isHexChars(str.slice(1));
}
function parseHsl(str) {
    var res = HSL_RE.exec(str);
    if (!res) {
        throw new Error("parseHsl: string is not a HSL color: \"" + str + "\"");
    }
    return { h: parseInt(res[1]), s: parseFloat(res[3]), l: parseFloat(res[5]) };
}
function parseColor(color) {
    if (!color)
        return { r: 0, g: 0, b: 0 };
    if (typeof color !== 'string') {
        throw new Error('parseColor: expected a string');
    }
    if (isHex(color)) {
        return convert_1.hexToRgb(color);
    }
    if (color.startsWith('hsl(')) {
        return convert_1.hslToRgb(parseHsl(color));
    }
    throw new Error("parseColor: unexpected color format: \"" + color + "\"");
}
exports.parseColor = parseColor;
//# sourceMappingURL=parse.js.map