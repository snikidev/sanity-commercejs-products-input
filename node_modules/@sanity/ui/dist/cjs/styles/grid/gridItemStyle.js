"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.responsiveGridItemStyle = void 0;
var helpers_1 = require("../helpers");
function responsiveGridItemStyle() {
    return [
        responsiveGridItemRowStyle,
        responsiveGridItemRowStartStyle,
        responsiveGridItemRowEndStyle,
        responsiveGridItemColumnStyle,
        responsiveGridItemColumnStartStyle,
        responsiveGridItemColumnEndStyle,
    ];
}
exports.responsiveGridItemStyle = responsiveGridItemStyle;
var GRID_ITEM_ROW = {
    auto: 'auto',
    full: '1 / -1',
};
var GRID_ITEM_COLUMN = {
    auto: 'auto',
    full: '1 / -1',
};
function responsiveGridItemRowStyle(props) {
    var theme = props.theme;
    var media = theme.sanity.media;
    return helpers_1.responsive(media, helpers_1.getResponsiveProp(props.row), function (row) {
        if (typeof row === 'number') {
            return { gridRow: "span " + row + " / span " + row };
        }
        return { gridRow: GRID_ITEM_ROW[row] };
    });
}
function responsiveGridItemRowStartStyle(props) {
    var theme = props.theme;
    var media = theme.sanity.media;
    return helpers_1.responsive(media, helpers_1.getResponsiveProp(props.rowStart), function (rowStart) { return ({
        gridRowStart: rowStart,
    }); });
}
function responsiveGridItemRowEndStyle(props) {
    var theme = props.theme;
    var media = theme.sanity.media;
    return helpers_1.responsive(media, helpers_1.getResponsiveProp(props.rowEnd), function (rowEnd) { return ({ gridRowEnd: rowEnd }); });
}
function responsiveGridItemColumnStyle(props) {
    var theme = props.theme;
    var media = theme.sanity.media;
    return helpers_1.responsive(media, helpers_1.getResponsiveProp(props.column), function (column) {
        if (typeof column === 'number') {
            return { gridColumn: "span " + column + " / span " + column };
        }
        return { gridColumn: GRID_ITEM_COLUMN[column] };
    });
}
function responsiveGridItemColumnStartStyle(props) {
    var theme = props.theme;
    var media = theme.sanity.media;
    return helpers_1.responsive(media, helpers_1.getResponsiveProp(props.columnStart), function (columnStart) { return ({
        gridColumnStart: columnStart,
    }); });
}
function responsiveGridItemColumnEndStyle(props) {
    var theme = props.theme;
    var media = theme.sanity.media;
    return helpers_1.responsive(media, helpers_1.getResponsiveProp(props.columnEnd), function (columnEnd) { return ({
        gridColumnEnd: columnEnd,
    }); });
}
//# sourceMappingURL=gridItemStyle.js.map