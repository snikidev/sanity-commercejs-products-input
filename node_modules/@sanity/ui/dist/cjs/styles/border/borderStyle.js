"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.responsiveBorderStyle = void 0;
var helpers_1 = require("../helpers");
var BORDER_VALUE = '1px solid var(--card-hairline-soft-color)';
function responsiveBorderStyle() {
    return [border, borderTop, borderRight, borderBottom, borderLeft];
}
exports.responsiveBorderStyle = responsiveBorderStyle;
function border(props) {
    var theme = props.theme;
    var media = theme.sanity.media;
    return helpers_1.responsive(media, helpers_1.getResponsiveProp(props.border), function (value) {
        return value ? { '&&': { border: BORDER_VALUE } } : { '&&': { border: 0 } };
    });
}
function borderTop(props) {
    var theme = props.theme;
    var media = theme.sanity.media;
    return helpers_1.responsive(media, helpers_1.getResponsiveProp(props.borderTop), function (value) {
        return value ? { '&&': { borderTop: BORDER_VALUE } } : { '&&': { borderTop: 0 } };
    });
}
function borderRight(props) {
    var theme = props.theme;
    var media = theme.sanity.media;
    return helpers_1.responsive(media, helpers_1.getResponsiveProp(props.borderRight), function (value) {
        return value ? { '&&': { borderRight: BORDER_VALUE } } : { '&&': { borderRight: 0 } };
    });
}
function borderBottom(props) {
    var theme = props.theme;
    var media = theme.sanity.media;
    return helpers_1.responsive(media, helpers_1.getResponsiveProp(props.borderBottom), function (value) {
        return value ? { '&&': { borderBottom: BORDER_VALUE } } : { '&&': { borderBottom: 0 } };
    });
}
function borderLeft(props) {
    var theme = props.theme;
    var media = theme.sanity.media;
    return helpers_1.responsive(media, helpers_1.getResponsiveProp(props.borderLeft), function (value) {
        return value ? { '&&': { borderLeft: BORDER_VALUE } } : { '&&': { borderLeft: 0 } };
    });
}
//# sourceMappingURL=borderStyle.js.map