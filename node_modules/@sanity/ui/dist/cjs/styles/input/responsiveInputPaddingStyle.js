"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.responsiveInputPaddingIconRightStyle = exports.responsiveInputPaddingIconLeftStyle = exports.responsiveInputPaddingIconsStyle = exports.responsiveInputPaddingStyle = void 0;
var helpers_1 = require("../helpers");
function responsiveInputPaddingStyle(props) {
    var iconLeft = props.iconLeft, iconRight = props.iconRight, theme = props.theme;
    var _a = theme.sanity, fonts = _a.fonts, media = _a.media, spaceScale = _a.space;
    var padding = helpers_1.getResponsiveProp(props.padding, [0]);
    var space = helpers_1.getResponsiveProp(props.space, [0]);
    var size = helpers_1.getResponsiveProp(props.fontSize, [0]);
    var len = Math.max(padding.length, space.length, size.length);
    var _padding = [];
    var _space = [];
    var _size = [];
    for (var i = 0; i < len; i += 1) {
        _padding[i] = padding[i] === undefined ? _padding[i - 1] : padding[i];
        _space[i] = space[i] === undefined ? _space[i - 1] : space[i];
        _size[i] = size[i] === undefined ? _size[i - 1] : size[i];
    }
    return helpers_1.responsive(media, _padding, function (_, i) {
        var fontSize = fonts.text.sizes[_size[i]] || fonts.text.sizes[2];
        var emSize = fontSize.lineHeight - fontSize.ascenderHeight - fontSize.descenderHeight;
        var p = spaceScale[_padding[i]];
        var s = spaceScale[_space[i]];
        var styles = {
            paddingTop: helpers_1.rem(p - fontSize.ascenderHeight),
            paddingRight: helpers_1.rem(p),
            paddingBottom: helpers_1.rem(p - fontSize.descenderHeight),
            paddingLeft: helpers_1.rem(p),
        };
        if (iconRight)
            styles.paddingRight = helpers_1.rem(p + emSize + s);
        if (iconLeft)
            styles.paddingLeft = helpers_1.rem(p + emSize + s);
        return styles;
    });
}
exports.responsiveInputPaddingStyle = responsiveInputPaddingStyle;
function responsiveInputPaddingIconsStyle(props) {
    return responsiveInputPaddingStyle(__assign(__assign({}, props), { iconLeft: true, iconRight: true }));
}
exports.responsiveInputPaddingIconsStyle = responsiveInputPaddingIconsStyle;
function responsiveInputPaddingIconLeftStyle(props) {
    return responsiveInputPaddingStyle(__assign(__assign({}, props), { iconLeft: true }));
}
exports.responsiveInputPaddingIconLeftStyle = responsiveInputPaddingIconLeftStyle;
function responsiveInputPaddingIconRightStyle(props) {
    return responsiveInputPaddingStyle(__assign(__assign({}, props), { iconRight: true }));
}
exports.responsiveInputPaddingIconRightStyle = responsiveInputPaddingIconRightStyle;
//# sourceMappingURL=responsiveInputPaddingStyle.js.map