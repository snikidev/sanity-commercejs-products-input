import React, { cloneElement, useCallback, useState } from 'react';
import ReactIs from 'react-is';
import { useClickOutside } from '../../hooks';
import { Popover } from '../../primitives';
export function MenuButton({ boundaryElement, button: buttonProp, id, menu: menuProp, placement, popoverScheme, portal, popoverRadius, }) {
    const [open, setOpen] = useState(false);
    const [focusLast, setFocusLast] = useState(false);
    const [buttonElement, setButtonElement] = useState(null);
    const [menuElement, setMenuElement] = useState(null);
    const handleButtonClick = useCallback(() => {
        setOpen((val) => !val);
        setFocusLast(false);
    }, []);
    const handleButtonKeyDown = useCallback((event) => {
        if (event.key === 'ArrowDown') {
            event.preventDefault();
            setOpen(true);
            setFocusLast(false);
            return;
        }
        if (event.key === 'ArrowUp') {
            event.preventDefault();
            setOpen(true);
            setFocusLast(true);
            return;
        }
    }, []);
    const handleMenuClickOutside = useCallback(() => setOpen(false), []);
    const handleMenuEscape = useCallback(() => {
        setOpen(false);
        if (buttonElement)
            buttonElement.focus();
    }, [buttonElement]);
    const handleItemClick = useCallback(() => {
        setOpen(false);
    }, []);
    useClickOutside(useCallback(() => setOpen(false), []), [buttonElement, menuElement]);
    const menuProps = {
        'aria-labelledby': id,
        focusLast,
        onClickOutside: handleMenuClickOutside,
        onEscape: handleMenuEscape,
        onItemClick: handleItemClick,
        ref: setMenuElement,
    };
    // @todo: check if the `menu` property is a Menu component?
    const menu = menuProp ? cloneElement(menuProp, menuProps) : null;
    const buttonProps = {
        id,
        onClick: handleButtonClick,
        onKeyDown: handleButtonKeyDown,
        ref: setButtonElement,
        selected: open,
    };
    // @todo: check if the `button` property is a Button component?
    const button = ReactIs.isElement(buttonProp) ? cloneElement(buttonProp, buttonProps) : null;
    return (React.createElement(Popover, { boundaryElement: boundaryElement, content: menu, "data-ui": "MenuButton", open: open, placement: placement, portal: portal, radius: popoverRadius, scheme: popoverScheme }, button || React.createElement(React.Fragment, null)));
}
//# sourceMappingURL=menuButton.js.map