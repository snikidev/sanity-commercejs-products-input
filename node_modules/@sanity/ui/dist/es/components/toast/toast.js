var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import { CloseIcon } from '@sanity/icons';
import React from 'react';
import { Box, Card, Flex, Stack, Text } from '../../primitives';
const STATUS_CARD_TONE = {
    error: 'critical',
    warning: 'caution',
    success: 'positive',
    info: 'primary',
};
export function Toast(props) {
    const { closable, description, onClose, title, status } = props, restProps = __rest(props, ["closable", "description", "onClose", "title", "status"]);
    const cardTone = status ? STATUS_CARD_TONE[status] : 'default';
    return (React.createElement(Card, Object.assign({}, restProps, { marginTop: 3, padding: 1, radius: 2, shadow: 2, tone: cardTone }),
        React.createElement(Flex, null,
            React.createElement(Box, { flex: 1, padding: 2 },
                React.createElement(Stack, { space: 3 },
                    title && React.createElement(Text, { weight: "semibold" }, title),
                    description && (React.createElement(Text, { muted: true, size: 1 }, description)))),
            closable && (React.createElement(Box, { marginLeft: 2 },
                React.createElement(Card, { as: "button", padding: 2, onClick: onClose, radius: 2, tone: cardTone, style: { verticalAlign: 'top' } },
                    React.createElement(Text, null,
                        React.createElement(CloseIcon, null))))))));
}
//# sourceMappingURL=toast.js.map