var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { forwardRef } from 'react';
import styled from 'styled-components';
import { Inline, KBD } from '../../primitives';
const Root = styled.kbd `
  &&:not([hidden]) {
    display: block;
  }
  font: inherit;
`;
const Key = styled(KBD) `
  /* See: https://github.com/styled-components/styled-components/issues/1816 */
  &&:not([hidden]) {
    display: block;
  }
`;
export const Hotkeys = forwardRef((props, ref) => {
    const { keys, padding, radius, size, space = 1 } = props, restProps = __rest(props, ["keys", "padding", "radius", "size", "space"]);
    if (!keys || keys.length === 0) {
        return React.createElement("span", null);
    }
    return (React.createElement(Root, Object.assign({}, restProps, { ref: ref }),
        React.createElement(Inline, { as: "span", space: space }, keys.map((key, i) => (React.createElement(Key, { key: i, padding: padding, radius: radius, size: size }, key))))));
});
Hotkeys.displayName = 'Hotkeys';
//# sourceMappingURL=hotkeys.js.map