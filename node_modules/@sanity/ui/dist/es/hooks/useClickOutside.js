import { useEffect, useState } from 'react';
export function useClickOutside(listener, elementsArg = [], boundaryElement) {
    const [element, setElement] = useState(null);
    const elements = [element, ...elementsArg];
    useEffect(() => {
        if (!listener)
            return undefined;
        const handleWindowMouseDown = (evt) => {
            const target = evt.target;
            if (!target) {
                return;
            }
            if (boundaryElement && !boundaryElement.contains(target)) {
                return;
            }
            let clickInside = false;
            for (const el of elements) {
                if (el && el.contains(target)) {
                    clickInside = true;
                }
            }
            if (!clickInside) {
                listener(evt);
            }
        };
        window.addEventListener('mousedown', handleWindowMouseDown);
        return () => {
            window.removeEventListener('mousedown', handleWindowMouseDown);
        };
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [boundaryElement, listener, ...elements]);
    return setElement;
}
//# sourceMappingURL=useClickOutside.js.map