import React from 'react';
import styled, { css } from 'styled-components';
import { getResponsiveProp, rem, responsive } from '../../styles';
import { Text } from '../text';
function responsiveAvatarCounterSizeStyle(props) {
    const { theme } = props;
    const { avatar, media } = theme.sanity;
    return responsive(media, props.$size, (size) => {
        const avatarSize = avatar.sizes[size];
        if (!avatarSize)
            return {};
        return {
            borderRadius: rem(avatarSize.size / 2),
            minWidth: rem(avatarSize.size),
            height: rem(avatarSize.size),
        };
    });
}
function avatarCounterBaseStyle(props) {
    const { theme } = props;
    return css `
    align-items: center;
    justify-content: center;
    box-sizing: border-box;
    user-select: none;
    color: inherit;
    color: var(--card-fg-color);
    background: var(--card-bg-color);
    box-shadow: 0 0 0 1px var(--card-bg-color), inset 0 0 0 1.5px var(--card-hairline-hard-color);
    padding: 0 ${rem(theme.sanity.space[2])};

    &:not([hidden]) {
      display: flex;
    }
  `;
}
const Root = styled.div(responsiveAvatarCounterSizeStyle, avatarCounterBaseStyle);
export function AvatarCounter({ count, size: sizeProp = 0, tone }) {
    const size = getResponsiveProp(sizeProp, [0]);
    return (React.createElement(Root, { "$size": size, "data-tone": tone },
        React.createElement(Text, { as: "span", size: size.map((s) => (s === 0 ? 0 : s + 1)) },
            React.createElement("strong", null, count))));
}
//# sourceMappingURL=avatarCounter.js.map