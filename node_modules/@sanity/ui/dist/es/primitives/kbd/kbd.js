var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
import React, { forwardRef } from 'react';
import styled, { css } from 'styled-components';
import { responsiveRadiusStyle } from '../../styles';
import { Box } from '../box';
import { Code } from '../code';
function kbd() {
    return css `
    background: var(--card-bg-color);
    font: inherit;
    box-shadow: inset 0 0 0 1px var(--card-hairline-hard-color);

    &&:not([hidden]) {
      display: inline-block;
    }
  `;
}
const Root = styled.kbd(responsiveRadiusStyle, kbd);
export const KBD = forwardRef((props, ref) => {
    const { children, padding = 1, radius = 2, size = 1 } = props, restProps = __rest(props, ["children", "padding", "radius", "size"]);
    return (React.createElement(Root, Object.assign({}, restProps, { radius: radius, ref: ref }),
        React.createElement(Box, { as: "span", padding: padding },
            React.createElement(Code, { as: "span", muted: true, size: size }, children))));
});
KBD.displayName = 'KBD';
//# sourceMappingURL=kbd.js.map