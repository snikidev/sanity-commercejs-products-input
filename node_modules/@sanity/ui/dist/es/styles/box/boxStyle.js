import { getResponsiveProp, responsive } from '../helpers';
const BOX_SIZING = {
    content: 'content-box',
    border: 'border-box',
};
const BOX_HEIGHT = {
    stretch: 'stretch',
    fill: '100%',
};
export function responsiveBoxStyle() {
    return [
        responsiveBoxSizingStyle,
        responsiveBoxHeightStyle,
        responsiveBoxOverflowStyle,
        responsiveBoxDisplayStyle,
    ];
}
function responsiveBoxDisplayStyle(props) {
    const { theme } = props;
    const { media } = theme.sanity;
    return responsive(media, getResponsiveProp(props.display), (display) => ({
        '&:not([hidden])': { display },
    }));
}
function responsiveBoxSizingStyle(props) {
    const { theme } = props;
    const { media } = theme.sanity;
    return responsive(media, getResponsiveProp(props.sizing), (sizing) => ({
        boxSizing: BOX_SIZING[sizing],
    }));
}
function responsiveBoxHeightStyle(props) {
    const { theme } = props;
    const { media } = theme.sanity;
    return responsive(media, getResponsiveProp(props.height), (height) => ({
        height: BOX_HEIGHT[height],
    }));
}
function responsiveBoxOverflowStyle(props) {
    const { theme } = props;
    const { media } = theme.sanity;
    return responsive(media, getResponsiveProp(props.overflow), (overflow) => ({
        overflow,
    }));
}
//# sourceMappingURL=boxStyle.js.map